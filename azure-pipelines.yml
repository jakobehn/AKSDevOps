trigger: none

variables:
  acrName: jakob
  aksPolicy: true
  controlPlaneSku: Free
  kubernetesVersion: 1.19.3
  subnetName: cluster
  subnetPrefix: 10.230.0.0/16
  vnetAddressPrefix: 10.0.0.0/8
  vnodesSubnetName: vnodes
  workspaceName: ndclondon
  workspaceResourceGroup: ndclondon

pool:
  vmImage: 'windows-2019'

stages:

- stage: DevTestEU
  displayName: DevTestEU
  variables:
    clusterName: ndc-test
    location: westeurope
    namespacesFile: ./AKS/namespaces-devtest.yaml
    resourceGroup: ndc-test
    vnetName: ndc-test
    vnetResourceGroupName: ndc-test

  jobs:      
  - job: Deploy
    displayName: Deploy

    steps:
    - task: AzureCLI@2
      displayName: 'Azure AD Groups'
      inputs:
        azureSubscription: 'Azure Sponsorship'
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          Write-Host "get groups"
          
          $groups = az ad group list --display-name "ClusterReader" | ConvertFrom-Json
          
          Write-Host $groups
          
          if( $groups.length -eq 0 ) {
              $clusterReaderGroup = az ad group create --display-name ClusterReaders --mail-nickname ClusterReaders --force | ConvertFrom-Json
          } else {
              $clusterReaderGroup = $groups[0]
          }
          
          $groups = az ad group list --display-name "ClusterReader" | ConvertFrom-Json
          
          if( $groups.length -eq 0 ) {
              $clusterAdminGroup = az ad group create --display-name ClusterAdmins --mail-nickname ClusterAdmins --force | ConvertFrom-Json
          } else {
              $clusterAdminGroup = $groups[0]
          }
          
          Write-Host $clusterReaderGroup
          Write-Host $clusterAdminGroup
          
          Write-Host "##vso[task.setvariable variable=clusterReaderGroupObjectId;]$clusterReaderGroup.objectId"
          Write-Host "##vso[task.setvariable variable=clusterAdminGroupObjectId;]$clusterAdminGroup.objectId"
        failOnStandardError: true

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Azure CNI Network'
      inputs:
        azureResourceManagerConnection: 'Azure Sponsor'
        subscriptionId: 'b7b2c6f7-b71e-4cd2-9e7c-409a44fe22f5'
        resourceGroupName: '$(resourceGroup)'
        location: '$(location)'
        csmFile: '$(System.DefaultWorkingDirectory)/_QBox.Environment/AKS/Network/network.json'
        overrideParameters: '-vnetName $(vnetName) -vnetAddressPrefix $(vnetAddressPrefix) -subnetName $(subnetName) -subnetPrefix $(subnetPrefix) -vnodesSubnetPrefix $(vnodesSubnetPrefix) -vnodesSubnetName $(vnodesSubnetName) -location $(location)'    

    - task: AzureResourceGroupDeployment@2
      displayName: 'AKS Cluster $(kubernetesVersion)'
      inputs:
        azureSubscription: 'Azure Sponsor'
        resourceGroupName: '$(resourceGroup)'
        location: '$(location)'
        csmFile: '$(System.DefaultWorkingDirectory)/_QBox.Environment/AKS/aks-cluster.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/_QBox.Environment/AKS/aks-cluster.parameters.json'
        overrideParameters: '-clusterName $(clusterName) -kubernetesVersion $(kubernetesVersion) -workspaceName $(workspaceName) -workspaceResourceGroup $(workspaceResourceGroup) -acrName $(acrName) -acrResourceGroupName $(acrResourceGroupName) -vnetName $(vnetName) -vnetSubnetName $(subnetName) -vnetResourceGroupName $(vnetResourceGroupName) -controlPlaneSku $(controlPlaneSku) -aksPolicy $(aksPolicy)'    

    - task: HelmInstaller@0
      displayName: 'Install Helm'
      inputs:
        helmVersion: 3.4.2

    - task: Kubernetes@1
      displayName: Namespaces
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Azure Sponsor'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(clusterName)'
        useClusterAdmin: true
        command: apply
        arguments: '-f $(namespacesFile)'
        workingDirectory: '$(System.DefaultWorkingDirectory)/_QBox.Environment/'

    - task: HelmDeploy@0
      displayName: 'Cluster permissions'
      inputs:
        azureSubscription: 'Azure Sponsor'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(clusterName)'
        useClusterAdmin: true
        command: upgrade
        chartType: FilePath
        chartPath: '$(System.DefaultWorkingDirectory)/_QBox.Environment/Permissions'
        releaseName: qboxpermissions
        overrideValues: 'groups.clusterReaders=$(clusterReaderGroupObjectId),groups.clusterAdmins=$(clusterAdminGroupObjectId)'
        waitForExecution: false
        arguments: '--atomic'

    - task: HelmDeploy@0
      displayName: 'helm repo add'
      inputs:
        azureSubscription: 'Azure Sponsor'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(clusterName)'
        useClusterAdmin: true
        command: repo
        arguments: 'add traefik https://helm.traefik.io/traefik'

    - task: HelmDeploy@0
      displayName: 'helm repo update'
      inputs:
        azureSubscription: 'Azure Sponsor'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(clusterName)'
        useClusterAdmin: true
        command: repo
        arguments: update

    - task: HelmDeploy@0
      displayName: 'Traefik ingress controller'
      inputs:
        azureSubscription: 'Azure Sponsor'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(clusterName)'
        useClusterAdmin: true
        command: upgrade
        chartName: traefik/traefik
        chartVersion: 9.12.3
        releaseName: traefik
        valueFile: '$(System.DefaultWorkingDirectory)/_QBox.Environment/traefik/values.yaml'
        waitForExecution: false
        arguments: '--debug'
